# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"read_medical_3d_image": "01-basics.ipynb",
         "show_one_3d_image": "01-basics.ipynb",
         "show_multiple_3d_images": "01-basics.ipynb",
         "crop_3d_tensor": "01-basics.ipynb",
         "resize_3d_tensor": "01-basics.ipynb",
         "TensorDicom3D": "01-basics.ipynb",
         "load_image_3d": "01-basics.ipynb",
         "normalize": "01-basics.ipynb",
         "TensorMask3D": "01-basics.ipynb",
         "Tensor.resize_3d": "02-transforms.ipynb",
         "TensorDicom3D.resize_3d": "02-transforms.ipynb",
         "TensorMask3D.resize_3d": "02-transforms.ipynb",
         "Resize3D": "02-transforms.ipynb",
         "TensorDicom3D.flip_ll_3d": "02-transforms.ipynb",
         "TensorMask3D.flip_ll_3d": "02-transforms.ipynb",
         "TensorDicom3D.flip_ap_3d": "02-transforms.ipynb",
         "TensorMask3D.flip_ap_3d": "02-transforms.ipynb",
         "TensorDicom3D.flip_cc_3d": "02-transforms.ipynb",
         "TensorMask3D.flip_cc_3d": "02-transforms.ipynb",
         "RandomFlip3D": "02-transforms.ipynb",
         "TensorDicom3D.rotate_90_3d": "02-transforms.ipynb",
         "TensorMask3D.rotate_90_3d": "02-transforms.ipynb",
         "TensorDicom3D.rotate_270_3d": "02-transforms.ipynb",
         "TensorMask3D.rotate_270_3d": "02-transforms.ipynb",
         "TensorDicom3D.rotate_180_3d": "02-transforms.ipynb",
         "TensorMask3D.rotate_180_3d": "02-transforms.ipynb",
         "RandomRotate3D": "02-transforms.ipynb",
         "TensorDicom3D.rotate_3d_by": "02-transforms.ipynb",
         "TensorMask3D.rotate_3d_by": "02-transforms.ipynb",
         "RandomRotate3DBy": "02-transforms.ipynb",
         "TensorDicom3D.dihedral3d": "02-transforms.ipynb",
         "TensorMask3D.dihedral3d": "02-transforms.ipynb",
         "RandomDihedral3D": "02-transforms.ipynb",
         "TensorDicom3D.crop_3d": "02-transforms.ipynb",
         "TensorMask3D.crop_3d": "02-transforms.ipynb",
         "RandomCrop3D": "02-transforms.ipynb",
         "ResizeCrop3D": "02-transforms.ipynb",
         "TensorDicom3D.warp_3d": "02-transforms.ipynb",
         "TensorMask3D.warp_3d": "02-transforms.ipynb",
         "Tensor.warp_4d": "02-transforms.ipynb",
         "RandomWarp3D": "02-transforms.ipynb",
         "TensorDicom3D.add_gaussian_noise": "02-transforms.ipynb",
         "RandomNoise3D": "02-transforms.ipynb",
         "TensorDicom3D.rescale": "02-transforms.ipynb",
         "TensorDicom3D.adjust_brightness": "02-transforms.ipynb",
         "RandomBrightness3D": "02-transforms.ipynb",
         "TensorDicom3D.adjust_contrast": "02-transforms.ipynb",
         "RandomContrast3D": "02-transforms.ipynb",
         "Tensor.make_pseudo_color": "02-transforms.ipynb",
         "TensorDicom3D.make_pseudo_color": "02-transforms.ipynb",
         "TensorMask3D.make_pseudo_color": "02-transforms.ipynb",
         "PseudoColor": "02-transforms.ipynb",
         "aug_transforms_3d": "02-transforms.ipynb",
         "Tensor.to_one_hot": "02-transforms.ipynb",
         "TensorMask3D.to_one_hot": "02-transforms.ipynb",
         "MaskOneHot": "02-transforms.ipynb",
         "Tensor.split_volume": "02-transforms.ipynb",
         "TensorDicom3D.split_volume": "02-transforms.ipynb",
         "TensorMask3D.split_volume": "02-transforms.ipynb",
         "Tensor.patch_volume": "02-transforms.ipynb",
         "TensorDicom3D.patch_volume": "02-transforms.ipynb",
         "TensorMask3D.patch_volume": "02-transforms.ipynb",
         "SplitVolume": "02-transforms.ipynb",
         "ScaleDicom": "03-datablock.ipynb",
         "ImageBlock3D": "03-datablock.ipynb",
         "AddMaskCodes3D": "03-datablock.ipynb",
         "MaskBlock3D": "03-datablock.ipynb",
         "TensorMask3D.clamp_to_range": "03-datablock.ipynb",
         "ClampMask3D": "03-datablock.ipynb",
         "show_batch_3d": "03-datablock.ipynb",
         "Sequential_": "05-models-losses-and-metrics.ipynb",
         "DoubleConv": "05-models-losses-and-metrics.ipynb",
         "ResBlock": "05-models-losses-and-metrics.ipynb",
         "DoubleResBlock": "05-models-losses-and-metrics.ipynb",
         "Down": "05-models-losses-and-metrics.ipynb",
         "ResDown": "05-models-losses-and-metrics.ipynb",
         "DoubleResDown": "05-models-losses-and-metrics.ipynb",
         "Up": "05-models-losses-and-metrics.ipynb",
         "ResUp": "05-models-losses-and-metrics.ipynb",
         "DoubleResUp": "05-models-losses-and-metrics.ipynb",
         "OutConv": "05-models-losses-and-metrics.ipynb",
         "OutDuoubleRes": "05-models-losses-and-metrics.ipynb",
         "resnet_3d": "05-models-losses-and-metrics.ipynb",
         "AbstractUNet3D": "05-models-losses-and-metrics.ipynb",
         "UNet3D": "05-models-losses-and-metrics.ipynb",
         "UResNet3D": "05-models-losses-and-metrics.ipynb",
         "DiceLossBinary": "05-models-losses-and-metrics.ipynb",
         "DiceLossMulti": "05-models-losses-and-metrics.ipynb",
         "MCCLossBinary": "05-models-losses-and-metrics.ipynb",
         "MCCLossMulti": "05-models-losses-and-metrics.ipynb",
         "SoftMCCLossMulti": "05-models-losses-and-metrics.ipynb",
         "WeightedMCCLossMulti": "05-models-losses-and-metrics.ipynb",
         "MCCScore": "05-models-losses-and-metrics.ipynb",
         "StackVolumes": "06-callbacks.ipynb",
         "SplitVolumes": "06-callbacks.ipynb",
         "SubsampleShuffle": "06-callbacks.ipynb",
         "MixSubvol": "06-callbacks.ipynb",
         "MixUp3D": "06-callbacks.ipynb",
         "RotateNifti": "06-various-tools.ipynb",
         "SubvolumeExporter": "06-various-tools.ipynb",
         "CropOriginalToMask": "06-various-tools.ipynb"}

modules = ["basics.py",
           "augment.py",
           "data.py",
           "models.py",
           "callback.py",
           "utils.py"]

doc_url = "https://kbressem.github.io/faimed3d/"

git_url = "https://github.com/kbressem/faimed3d/tree/master/"

def custom_doc_links(name): return None
