# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"TensorDicom3D": "01_basics.ipynb",
         "TensorMask3D": "01_basics.ipynb",
         "TensorDicom3D.set_spacing": "01_basics.ipynb",
         "TensorMask3D.set_spacing": "01_basics.ipynb",
         "TensorDicom3D.get_spacing": "01_basics.ipynb",
         "TensorMask3D.get_spacing": "01_basics.ipynb",
         "TensorDicom3D.set_origin": "01_basics.ipynb",
         "TensorMask3D.set_origin": "01_basics.ipynb",
         "TensorDicom3D.get_origin": "01_basics.ipynb",
         "TensorMask3D.get_origin": "01_basics.ipynb",
         "TensorDicom3D.set_direction": "01_basics.ipynb",
         "TensorMask3D.set_direction": "01_basics.ipynb",
         "show_image_3d": "01_basics.ipynb",
         "show_images_3d": "01_basics.ipynb",
         "Tensor.show": "01_basics.ipynb",
         "TensorDicom3D.freqhist_bins": "02_normalization.ipynb",
         "Tensor.freqhist_bins": "02_normalization.ipynb",
         "TensorDicom3D.hist_scaled": "02_normalization.ipynb",
         "Tensor.hist_scaled": "02_normalization.ipynb",
         "TensorDicom3D.hist_scaled_pt": "02_normalization.ipynb",
         "Tensor.hist_scaled_pt": "02_normalization.ipynb",
         "TensorDicom3D.normalize": "01_basics.ipynb",
         "ImageCorrectionWrapper": "02_normalization.ipynb",
         "TensorDicom3D.strip": "01_basics.ipynb",
         "TensorMask3D.strip": "01_basics.ipynb",
         "TensorDicom3D.mean_scale": "02_normalization.ipynb",
         "TensorDicom3D.median_scale": "02_normalization.ipynb",
         "TensorDicom3D.max_scale": "02_normalization.ipynb",
         "Tensor.get_percentile": "02_normalization.ipynb",
         "Tensor.get_landmarks": "02_normalization.ipynb",
         "find_standard_scale": "02_normalization.ipynb",
         "Tensor.piecewise_hist": "02_normalization.ipynb",
         "TensorDicom3D.resize_3d": "03_transforms.ipynb",
         "TensorMask3D.resize_3d": "03_transforms.ipynb",
         "index_based_resize": "03_transforms.ipynb",
         "Resize3D": "03_transforms.ipynb",
         "TensorDicom3D.pad_to": "03_transforms.ipynb",
         "TensorMask3D.pad_to": "03_transforms.ipynb",
         "Pad3D": "03_transforms.ipynb",
         "TensorDicom3D.flip_ll_3d": "03_transforms.ipynb",
         "TensorMask3D.flip_ll_3d": "03_transforms.ipynb",
         "TensorDicom3D.flip_ap_3d": "03_transforms.ipynb",
         "TensorMask3D.flip_ap_3d": "03_transforms.ipynb",
         "TensorDicom3D.flip_cc_3d": "03_transforms.ipynb",
         "TensorMask3D.flip_cc_3d": "03_transforms.ipynb",
         "RandomFlip3D": "03_transforms.ipynb",
         "TensorDicom3D.rotate_90_3d": "03_transforms.ipynb",
         "TensorMask3D.rotate_90_3d": "03_transforms.ipynb",
         "TensorDicom3D.rotate_270_3d": "03_transforms.ipynb",
         "TensorMask3D.rotate_270_3d": "03_transforms.ipynb",
         "TensorDicom3D.rotate_180_3d": "03_transforms.ipynb",
         "TensorMask3D.rotate_180_3d": "03_transforms.ipynb",
         "RandomRotate3D": "03_transforms.ipynb",
         "Tensor.apply_along": "03_transforms.ipynb",
         "RandomRotate3DBy": "03_transforms.ipynb",
         "TensorDicom3D.dihedral3d": "03_transforms.ipynb",
         "TensorMask3D.dihedral3d": "03_transforms.ipynb",
         "RandomDihedral3D": "03_transforms.ipynb",
         "TensorDicom3D.crop_3d": "03_transforms.ipynb",
         "TensorMask3D.crop_3d": "03_transforms.ipynb",
         "RandomCrop3D": "03_transforms.ipynb",
         "ResizeCrop3D": "03_transforms.ipynb",
         "MaskErease": "03_transforms.ipynb",
         "RandomPerspective3D": "03_transforms.ipynb",
         "warp_3d": "03_transforms.ipynb",
         "TensorDicom3D.grid_tfms": "03_transforms.ipynb",
         "TensorMask3D.grid_tfms": "03_transforms.ipynb",
         "RandomWarp3D": "03_transforms.ipynb",
         "sheer_3d": "03_transforms.ipynb",
         "RandomSheer3D": "03_transforms.ipynb",
         "trapezoid_3d": "03_transforms.ipynb",
         "RandomTrapezoid3D": "03_transforms.ipynb",
         "TensorDicom3D.gaussian_noise": "03_transforms.ipynb",
         "RandomNoise3D": "03_transforms.ipynb",
         "RandomBlur3D": "03_transforms.ipynb",
         "TensorDicom3D.rescale": "03_transforms.ipynb",
         "TensorDicom3D.adjust_brightness": "03_transforms.ipynb",
         "RandomBrightness3D": "03_transforms.ipynb",
         "TensorDicom3D.adjust_contrast": "03_transforms.ipynb",
         "RandomContrast3D": "03_transforms.ipynb",
         "TensorDicom3D.make_pseudo_color": "03_transforms.ipynb",
         "TensorMask3D.make_pseudo_color": "03_transforms.ipynb",
         "PseudoColor": "03_transforms.ipynb",
         "aug_transforms_3d": "03_transforms.ipynb",
         "TensorMask3D.clamp_to_range": "03_transforms.ipynb",
         "ClampMask3D": "03_transforms.ipynb",
         "TensorMask3D.reduce_classes": "03_transforms.ipynb",
         "ReduceClasses": "03_transforms.ipynb",
         "ScaleDicom": "04_datablock.ipynb",
         "ImageBlock3D": "04_datablock.ipynb",
         "MaskBlock3D": "04_datablock.ipynb",
         "show_batch_3d": "04_datablock.ipynb",
         "Sequential_": "05a_models.modules.ipynb",
         "AlexNet": "05b_models.alexnet.ipynb",
         "ASPPConv": "05b_models.deeplabv3.ipynb",
         "ASPPPooling": "05b_models.deeplabv3.ipynb",
         "ASPP": "05b_models.deeplabv3.ipynb",
         "Decoder": "05b_models.deeplabv3.ipynb",
         "DeepLab": "05b_models.deeplabv3.ipynb",
         "resnet18_3d": "05b_models.resnet.ipynb",
         "resnet34_3d": "05b_models.resnet.ipynb",
         "resnet50_3d": "05b_models.resnet.ipynb",
         "resnet101_3d": "05b_models.resnet.ipynb",
         "resnet152_3d": "05b_models.resnet.ipynb",
         "build_backbone": "05b_models.resnet.ipynb",
         "conv3x3": "05b_models.resnet.ipynb",
         "conv1x1": "05b_models.resnet.ipynb",
         "BasicBlock3d": "05b_models.resnet.ipynb",
         "Bottleneck3d": "05b_models.resnet.ipynb",
         "IdentityLayer": "05b_models.resnet.ipynb",
         "ResNet3D": "05b_models.resnet.ipynb",
         "Mish": "05c_models.unet.ipynb",
         "DoubleConv": "05c_models.unet.ipynb",
         "DoubleResBlock": "05c_models.unet.ipynb",
         "Down": "05c_models.unet.ipynb",
         "Up": "05c_models.unet.ipynb",
         "OutConv": "05c_models.unet.ipynb",
         "OutDuoubleRes": "05c_models.unet.ipynb",
         "AbstractUNet3D": "05c_models.unet.ipynb",
         "UResNet3D": "05c_models.unet.ipynb",
         "UResNet3D_2": "05c_models.unet.ipynb",
         "DoubleUNet3D": "05c_models.unet.ipynb",
         "FPN": "05c_models.unet.ipynb",
         "UneXt50": "05c_models.unet.ipynb",
         "TinyUNet": "05c_models.unet.ipynb",
         "BaseLoss": "05d_models.losses.ipynb",
         "DiceLoss": "05d_models.losses.ipynb",
         "MCCLoss": "05d_models.losses.ipynb",
         "StackVolumes": "06_callback.ipynb",
         "SplitVolumes": "06_callback.ipynb",
         "SubsampleShuffle": "06_callback.ipynb",
         "MixSubvol": "06_callback.ipynb",
         "MixUp3D": "06_callback.ipynb",
         "ReloadBestFit": "06_callback.ipynb",
         "RotateNifti": "99_tools.ipynb",
         "SubvolumeExporter": "99_tools.ipynb",
         "CropOriginalToMask": "99_tools.ipynb"}

modules = ["basics.py",
           "normalize.py",
           "augment.py",
           "data.py",
           "models/modules.py",
           "models/alexnet.py",
           "models/deeplabv3.py",
           "models/resnet.py",
           "models/unet.py",
           "models/losses.py",
           "callback.py",
           "utils.py"]

doc_url = "https://kbressem.github.io/faimed3d/"

git_url = "https://github.com/kbressem/faimed3d/tree/master/"

def custom_doc_links(name): return None
